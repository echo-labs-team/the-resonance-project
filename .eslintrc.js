module.exports = {
  env: {
    'react-native/react-native': true,
  },
  extends: [
    '@react-native-community',
    'eslint:recommended',
    'plugin:@tanstack/eslint-plugin-query/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:@typescript-eslint/recommended',
    'plugin:import/recommended',
    'plugin:import/typescript',
    'plugin:prettier/recommended',
    'plugin:react-hooks/recommended',
    'plugin:react/all',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: { jsx: true },
    ecmaVersion: 12,
    project: ['./tsconfig.json'],
    sourceType: 'module',
  },
  settings: {
    'import/ignore': ['react-native'],
    react: { version: 'detect' },
  },
  plugins: [
    '@tanstack/query',
    '@typescript-eslint',
    'prettier',
    'react-hooks',
    'react-native',
    'react',
    'sort-destructure-keys',
    'sort-keys-fix',
    'typescript-sort-keys',
  ],
  rules: {
    // Added
    '@typescript-eslint/sort-type-union-intersection-members': 'error',
    '@typescript-eslint/no-misused-promises': [
      'error',
      {
        checksVoidReturn: {
          arguments: true,
          attributes: false,
        },
      },
    ],
    'import/no-cycle': 'error',
    'import/no-unresolved': 'error',
    'no-constant-binary-expression': 'error',
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': [
      'error',
      { enableDangerousAutofixThisMayCauseInfiniteLoops: true },
    ],
    'react/function-component-definition': [
      'error',
      {
        namedComponents: 'function-declaration',
        unnamedComponents: 'arrow-function',
      },
    ],
    'react/no-multi-comp': ['error', { ignoreStateless: true }],
    'sort-destructure-keys/sort-destructure-keys': 'error',
    'sort-keys-fix/sort-keys-fix': 'error',
    'typescript-sort-keys/interface': 'error',
    'typescript-sort-keys/string-enum': 'error',
    'react/react-in-jsx-scope': 'off',
    // Ignored (outside prettier and typescript rules)
    'react/forbid-component-props': 'off',
    'react/jsx-child-element-spacing': 'off',
    'react/jsx-closing-bracket-location': 'off',
    'react/jsx-filename-extension': 'off',
    'react/jsx-indent-props': 'off',
    'react/jsx-indent': 'off',
    'react/jsx-max-depth': 'off',
    'react/jsx-max-props-per-line': 'off',
    'react/jsx-newline': 'off',
    'react/jsx-no-bind': 'off',
    'react/jsx-no-literals': 'off',
    'react/jsx-one-expression-per-line': 'off',
    'react/jsx-props-no-spreading': 'warn',
    'react/require-default-props': 'off',

    // React Native
    'react-native/no-unused-styles': 'warn',
    'react-native/split-platform-components': 'error',
    'react-native/no-inline-styles': 'warn',
    'react-native/no-color-literals': 'warn',
    'react-native/no-single-element-style-arrays': 'warn',
    'react/style-prop-object': ['error', { allow: ['StatusBar'] }],
  },
  ignorePatterns: [
    '.eslintrc.js',
    '*.config.js',
    '*.json',
    'android/',
    'artifacts/',
    'assets/',
    'coverage/',
    'ios/',
    'node_modules/',
    'out/',
    'shared/',
    'testing/',
  ],
};
